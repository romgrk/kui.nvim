/** @noSelf */
declare module 'lualib_bundle' {
  const __TS__ArrayConcat: any;
  const __TS__ArrayEntries: any;
  const __TS__ArrayEvery: any;
  const __TS__ArrayFilter: any;
  const __TS__ArrayForEach: any;
  const __TS__ArrayFind: any;
  const __TS__ArrayFindIndex: any;
  const __TS__ArrayFrom: any;
  const __TS__ArrayIncludes: any;
  const __TS__ArrayIndexOf: any;
  const __TS__ArrayIsArray: any;
  const __TS__ArrayJoin: any;
  const __TS__ArrayMap: any;
  const __TS__ArrayPush: any;
  const __TS__ArrayPushArray: any;
  const __TS__ArrayReduce: any;
  const __TS__ArrayReduceRight: any;
  const __TS__ArrayReverse: any;
  const __TS__ArrayUnshift: any;
  const __TS__ArraySort: any;
  const __TS__ArraySlice: any;
  const __TS__ArraySome: any;
  const __TS__ArraySplice: any;
  const __TS__ArrayToObject: any;
  const __TS__ArrayFlat: any;
  const __TS__ArrayFlatMap: any;
  const __TS__ArraySetLength: any;
  const __TS__AsyncAwaiter: any;
  const __TS__Await: any;
  const __TS__Class: any;
  const __TS__ClassExtends: any;
  const __TS__CloneDescriptor: any;
  const __TS__CountVarargs: any;
  const __TS__Decorate: any;
  const __TS__DecorateParam: any;
  const __TS__Delete: any;
  const __TS__DelegatedYield: any;
  const Error: any;
  const RangeError: any;
  const ReferenceError: any;
  const SyntaxError: any;
  const TypeError: any;
  const URIError: any;
  const __TS__FunctionBind: any;
  const __TS__Generator: any;
  const __TS__InstanceOf: any;
  const __TS__InstanceOfObject: any;
  const __TS__Iterator: any;
  const __TS__LuaIteratorSpread: any;
  const Map: any;
  const __TS__Match: any;
  const __TS__MathAtan2: any;
  const __TS__MathModf: any;
  const __TS__MathSign: any;
  const __TS__New: any;
  const __TS__Number: any;
  const __TS__NumberIsFinite: any;
  const __TS__NumberIsNaN: any;
  const __TS__NumberToString: any;
  const __TS__ObjectAssign: any;
  const __TS__ObjectDefineProperty: any;
  const __TS__ObjectEntries: any;
  const __TS__ObjectFromEntries: any;
  const __TS__ObjectGetOwnPropertyDescriptor: any;
  const __TS__ObjectGetOwnPropertyDescriptors: any;
  const __TS__ObjectKeys: any;
  const __TS__ObjectRest: any;
  const __TS__ObjectValues: any;
  const __TS__ParseFloat: any;
  const __TS__ParseInt: any;
  const __TS__Promise: any;
  const __TS__PromiseAll: any;
  const __TS__PromiseAllSettled: any;
  const __TS__PromiseAny: any;
  const __TS__PromiseRace: any;
  const Set: any;
  const __TS__SetDescriptor: any;
  const __TS__SparseArrayNew: any;
  const __TS__SparseArrayPush: any;
  const __TS__SparseArraySpread: any;
  const WeakMap: any;
  const WeakSet: any;
  const __TS__SourceMapTraceBack: any;
  const __TS__Spread: any;
  const __TS__StringAccess: any;
  const __TS__StringCharAt: any;
  const __TS__StringCharCodeAt: any;
  const __TS__StringEndsWith: any;
  const __TS__StringIncludes: any;
  const __TS__StringPadEnd: any;
  const __TS__StringPadStart: any;
  const __TS__StringReplace: any;
  const __TS__StringReplaceAll: any;
  const __TS__StringSlice: any;
  const __TS__StringSplit: any;
  const __TS__StringStartsWith: any;
  const __TS__StringSubstr: any;
  const __TS__StringSubstring: any;
  const __TS__StringTrim: any;
  const __TS__StringTrimEnd: any;
  const __TS__StringTrimStart: any;
  const __TS__Symbol: any;
  const Symbol: any;
  const __TS__SymbolRegistryFor: any;
  const __TS__SymbolRegistryKeyFor: any;
  const __TS__TypeOf: any;
  const __TS__Unpack: any;
}
